version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: xlon1234
      POSTGRES_DB: xlonesg
    volumes:
      - ../pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8000"
    environment:
      DATABASE_URL: postgresql://postgres:xlon1234@db:5432/xlonesg
      PYTHONPATH: /app
    volumes:
      - ./app:/app/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./frontend_build:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
